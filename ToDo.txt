1. make a package.json by running npm init
2. install the express npm package: 'npm install express'
3. create a server.js file
4. Install the Handlebars npm package: 'pm install express-handlebars'
5. Install mySQL package: npm install mySQL
6. Require the following npm package in side the server.js file: express

DB setup:
1. create a folder named DB
2. Inside the DB folder, create a file name schema.sql
3. inside the schema:
    make the burgers_db
    use the burgers_db 
    Create a burgers table with these fields
    id: increment automatically and serves as the primary key
    burger name: a string
    devoured: a boolean
4. in the same folder, make a seeds.sql folder, and in this, population the database with at least 3 entries.
5. run the sql files: make sure you are in the db folder of your app.
    -start mysql command line tool and login: `mysql -u -root -p`
    -rule the seeds.sql file: source seeds.sql
    -close out of the MySQL command line tool: `exit`

Config setup:
1. create a folder named `config`
2. create connection.js inside of Config
3. setup the connection from Node to mySQL and export the connection.
4. create an orm.js file inside config
    -import the connection.js into orm.js
    -in orm.js, create methods that will execute the mySql commands in the controllers: the methods are selectAll(), insertOne(), updateOne() then exporet the ORM object in module.exports.

Model setup:
1. create a folder name models in burger directory.
2. make burger.js file inside it and in burger.js:
    -import orm.js
    -create the code that will call the orm functions using burger specific input for the ORM
    -export at the end of the burger.js file.

Controller setup:
1. Create a folder named "controllers".
2. In controllers, create burgers_controller.js file and import the following: express, burger.js
3. Create router for the app, and export the router at the end of your file.

View setup:
1. Create a views folder.
2. Inside the views folder: create index.handlebars file
3. Create a layouts directions inside views and 
    - create main.handlebars
    - setup main.handlebars so it's able to be used by Handlebars.
    - setup index.handlebars to have the template that Handlebars can render into.
    - Create a button in index.handlebars that will submit the user input into the databse.

